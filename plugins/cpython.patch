--- pyconfig.h.orig	2020-10-24 22:13:50.745086908 +0100
+++ pyconfig.h	2020-10-24 23:04:46.647877114 +0100
@@ -979,7 +979,7 @@
 #define HAVE_SYS_FILE_H 1
 
 /* Define to 1 if you have the <sys/ioctl.h> header file. */
-#define HAVE_SYS_IOCTL_H 1
+//#define HAVE_SYS_IOCTL_H 1
 
 /* Define to 1 if you have the <sys/kern_control.h> header file. */
 /* #undef HAVE_SYS_KERN_CONTROL_H */
@@ -1010,7 +1010,7 @@
 #define HAVE_SYS_RANDOM_H 1
 
 /* Define to 1 if you have the <sys/resource.h> header file. */
-#define HAVE_SYS_RESOURCE_H 1
+//#define HAVE_SYS_RESOURCE_H 1
 
 /* Define to 1 if you have the <sys/select.h> header file. */
 #define HAVE_SYS_SELECT_H 1
--- setup.py
+++ setup.py
@@ -16,7 +16,7 @@ from distutils.command.install_lib import install_lib
 from distutils.command.build_scripts import build_scripts
 from distutils.spawn import find_executable
 
-cross_compiling = "_PYTHON_HOST_PLATFORM" in os.environ
+cross_compiling = True
 
 # Add special CFLAGS reserved for building the interpreter and the stdlib
 # modules (Issue #21121).
--- Modules/Setup.orig	2021-02-08 01:32:20.460032265 +0000
+++ Modules/Setup	2021-02-08 01:32:23.108052623 +0000
@@ -107,7 +107,7 @@
 
 posix posixmodule.c		# posix (UNIX) system calls
 errno errnomodule.c		# posix (UNIX) errno values
-pwd pwdmodule.c			# this is needed to find out the user's home dir
+#pwd pwdmodule.c			# this is needed to find out the user's home dir
 				# if $HOME is not set
 _sre _sre.c			# Fredrik Lundh's new regular expressions
 _codecs _codecsmodule.c		# access to the builtin codecs and codec registry
@@ -358,7 +358,7 @@
 # Andrew Kuchling's zlib module.
 # This require zlib 1.1.3 (or later).
 # See http://www.gzip.org/zlib/
-#zlib zlibmodule.c -I$(prefix)/include -L$(exec_prefix)/lib -lz
+zlib zlibmodule.c -IModules/zlib -LModules/zlib -lz
 
 # Interface to the Expat XML parser
 #
diff --git a/Python/pylifecycle.c b/Python/pylifecycle.c
index 422454c873..5862c11685 100644
--- a/Python/pylifecycle.c
+++ b/Python/pylifecycle.c
@@ -65,7 +65,7 @@ extern int _PyFaulthandler_Init(void);
 extern void _PyFaulthandler_Fini(void);
 extern void _PyHash_Fini(void);
 extern int _PyTraceMalloc_Init(void);
-extern int _PyTraceMalloc_Fini(void);
+extern void _PyTraceMalloc_Fini(void);
 
 #ifdef WITH_THREAD
 extern void _PyGILState_Init(PyInterpreterState *, PyThreadState *);
